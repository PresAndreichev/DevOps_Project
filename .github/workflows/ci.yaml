name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build-docker.outputs.image-tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install pylint
        run: |
          pip install pylint

      - name: Install black
        run: |
          pip install black

      - name: Run Lint check
        id: lint
        run: |
          pylint src/app.py src/app_test.py

      - name: Format check
        run: |
          black src/app.py src/app_test.py

      - name: Run Unit tests
        run: |
          pytest

      - name: Build Docker Image
        id: build-docker
        run: |
          docker build -t myapp:${{ github.sha }} .
          echo "image-tag=myapp:${{ github.sha }}" >> $GITHUB_OUTPUT

  security_tests:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install Snyk CLI
        run: |
          npm install -g snyk

      - name: Authenticate Snyk
        run: |
          snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk tests (DAST)
        run: |
          snyk test

      - name: Trivy scanner in filesystem mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'            
          scan-ref: '.'              
          format: 'table'             
          exit-code: '1'

      - name: Gitleaks detections
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
          fail: true

      - name: Set up JDK for SonarCloud Scanner
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run SonarCloud scan (SAST)
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: [build_and_test, security_tests]
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker Image (for this job)
        id: build-docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }} .
          echo "image-tag=${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Trivy scan Docker Image (before push)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: '${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: 'true'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          IMAGE_TO_PUSH=${{ steps.build-docker.outputs.image-tag }}
          docker push $IMAGE_TO_PUSH
   